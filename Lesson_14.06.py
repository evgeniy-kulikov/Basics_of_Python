# Lesson_14
#
# Как работает оператор  'or'

# Оператор  'or'  возвращает первый истинный элемент или последний ложный.
# Оператор  'or'  не проверяет следующее логическое выражение если текущее  'True'  (ленивый)
import math

if 1 < 2 or math.sqrt(-1):  # квадратного корня из отрицательного числа несуществует - ОШИБКА
    print('Ошибки не будет т.к. первое условие ложь')
print('работаем дальше')

# для возникновения ошибки меняем условия местами
# if math.sqrt(-1) or 1 < 2:  # квадратного корня из отрицательного числа несуществует - ОШИБКА
#     print('Ошибки не будет т.к. первое условие ложь')
# print('работаем дальше')

# первый - ИСТИНА
print(0 or None or [1] or 2 or '' or {3: 'b'} or [])

# если все ЛОЖЬ то ператор 'or' возвращает последнюю ЛОЖЬ
print([] or '' or {} or 0 or None)

# Примеры

# and: извлечение квадратного корня из отрицательного числа
# создать список из чисел, которые имеют квадратный корень меньше двух
numbers = [4, -1, 2, 3, -4, 16, 1]
result = []
# обычный способ
for i in numbers:
    if i > 0:  # избежать ошибки получения квадратного кореня из отрицательного числа
        sq_root = math.sqrt(i)
        if sq_root < 2:
            result.append(i)
print(result)
# используется 'ленивый' and
result = []
for i in numbers:
    if i > 0 and math.sqrt(i) < 2:
        result.append(i)
print(result)
# используется генератор
# перебор чисел  (i for i in numbers) по условию (if i > 0 and math.sqrt(i) < 2) и сразу наполняем список
result = [i for i in numbers if i > 0 and math.sqrt(i) < 2]
print(result)
