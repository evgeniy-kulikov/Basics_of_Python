import copy
# Lesson_14
#
# Хранение списков в памяти
# При работе со списками стоит помнить, что если мы переприсваиваем список в другую переменную a = b
# и меняем значения внутри нового списка b[1], значения изменятся и внутри старого списка a[1],
# т.к. ссылки на элементы списка остаются на своих местах в памяти и каждый список использует одни и те же элементы
#
# аналогия с числом
a = 1
b = a
b = 100
# число 'a' не изменилось
print(a)
# работа со списком
a = [1, 2, 3]
b = a
b[1] = 100
# список 'а' изменился тоже
print(a)

# Изменение элементов списка в функции
#
# При передаче списка параметром в функцию нужно быть особенно внимательными:
# функция может изменить элемент списка внутри основной программы
numbers = [1, 2, 3]


def change_num_in_list(input_list):
    input_list[1] = 200


# после вызова функции
change_num_in_list(numbers)
# список в основной программе тоже изменится
print(numbers)

# Методы копирования списка

# для избежания изменеий нужно работать не со списками а с их копиями
# Метод copy у самого списка.
# Создание среза от начала и до конца списка my_list[:]
print('\nприменеие метода среза [:]')
a = [1, 2, 3]
b = a[:]
b[1] = 200
# список 'а' не изменился
print('список a', a)
print('список b', b)

# Метод 'copy' у самого списка.
print('\nприменеие метода "copy"')
b = a.copy()
b[1] = 200
# список 'а' не изменился
print('список a', a)
print('список b', b)
#
# НО !  эти способы не будут работать если есть вложенные списки
# метод среза [:] и метод "copy" копируют только перыую часть списка
print('\nНО !  эти способы не будут работать если есть вложенные списки')
print('\nприменеие метода среза [:]')
a = [1, 2, [3, 4]]
b = a[:]
# изменяем элемент во вложенном списке
b[2][0] = 200
print('список a изменился', a)
print('список b', b)

print('\nприменеие метода "copy"')
a = [1, 2, [3, 4]]
b = a.copy()
b[2][0] = 200
print('список a изменился', a)
print('список b', b)

# Модуль copy
print('\nМодуль copy\nфункция deepcopy')
# Используется функция deepcopy
# b = copy.deepcopy(a).
# Применяется для полного (глубокого) копирования списка
# импортируем модуль (import copy)
a = [1, 2, [3, 4]]
b = copy.deepcopy(a)
b[2][0] = 200
print('список a', a)
print('список b', b)